{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/miccall/source/css/demo.css","path":"css/demo.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/backcss.css","path":"css/backcss.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/dropdownMenu.css","path":"css/dropdownMenu.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/gallery.min.css","path":"css/gallery.min.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/item.css","path":"css/item.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/mic_gallery.css","path":"css/mic_gallery.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/mic_main.css","path":"css/mic_main.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/my_link.css","path":"css/my_link.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/noscript.css","path":"css/noscript.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/ok_prism.css","path":"css/ok_prism.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism.css","path":"css/prism.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_coy.css","path":"css/prism_coy.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_dark.css","path":"css/prism_dark.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_default.css","path":"css/prism_default.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_funky.css","path":"css/prism_funky.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_okaidia.css","path":"css/prism_okaidia.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_solarized.css","path":"css/prism_solarized.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_twilight.css","path":"css/prism_twilight.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/typo.css","path":"css/typo.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/FZLT.ttf","path":"fonts/FZLT.ttf","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/12.jpg","path":"images/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/21.jpg","path":"images/21.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/3123.jpg","path":"images/3123.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/me.jpg","path":"images/me.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/overlay.png","path":"images/overlay.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic01.jpg","path":"images/pic01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic02.jpg","path":"images/pic02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic03.jpg","path":"images/pic03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic04.jpg","path":"images/pic04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic05.jpg","path":"images/pic05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic06.jpg","path":"images/pic06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic07.jpg","path":"images/pic07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic08.jpg","path":"images/pic08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic09.jpg","path":"images/pic09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic10.jpg","path":"images/pic10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic11.jpg","path":"images/pic11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic12.jpg","path":"images/pic12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/picx03.jpg","path":"images/picx03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/gallery_skel.min.js","path":"js/gallery_skel.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.scrollex.min.js","path":"js/jquery.scrollex.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.scrolly.min.js","path":"js/jquery.scrolly.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/mic_gallery.js","path":"js/mic_gallery.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/prism.js","path":"js/prism.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/skel.min.js","path":"js/skel.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/util.js","path":"js/util.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/img/logo_miccall.png","path":"img/logo_miccall.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/arrow.svg","path":"css/images/arrow.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/arrow-small.svg","path":"css/images/arrow-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close-small-alt.svg","path":"css/images/close-small-alt.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close-small.svg","path":"css/images/close-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close.svg","path":"css/images/close.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/open-small.svg","path":"css/images/open-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/open.svg","path":"css/images/open.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/spinner.svg","path":"css/images/spinner.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/01.jpg","path":"images/fulls/01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/02.jpg","path":"images/fulls/02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/03.jpg","path":"images/fulls/03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/04.jpg","path":"images/fulls/04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/05.jpg","path":"images/fulls/05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/06.jpg","path":"images/fulls/06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/07.jpg","path":"images/fulls/07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/08.jpg","path":"images/fulls/08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/09.jpg","path":"images/fulls/09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/10.jpg","path":"images/fulls/10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/11.jpg","path":"images/fulls/11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/12.jpg","path":"images/fulls/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/01.jpg","path":"images/thumbs/01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/02.jpg","path":"images/thumbs/02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/03.jpg","path":"images/thumbs/03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/04.jpg","path":"images/thumbs/04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/05.jpg","path":"images/thumbs/05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/06.jpg","path":"images/thumbs/06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/07.jpg","path":"images/thumbs/07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/08.jpg","path":"images/thumbs/08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/09.jpg","path":"images/thumbs/09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/10.jpg","path":"images/thumbs/10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/11.jpg","path":"images/thumbs/11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/12.jpg","path":"images/thumbs/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/gallery/gallery.js","path":"js/gallery/gallery.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/7月29日.md","hash":"014855a1e11e6bc02505a3b1485ae155ccd4af43","modified":1627552418860},{"_id":"source/.DS_Store","hash":"8a1739436f4b4973e6e82503cac5fb6f74af33ec","modified":1627607907657},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1627472907920},{"_id":"themes/miccall/layout/index.ejs","hash":"f5e1bd35ce8e172ec0b5479066eec55a2ccc6c2f","modified":1540215856000},{"_id":"themes/miccall/_config.yml","hash":"a915dbe44531fcf222c58b08dc09bed128f5f67d","modified":1627557073562},{"_id":"themes/miccall/layout/post.ejs","hash":"d3c06743dfd9c137b8953e927d80d0099f169034","modified":1540215856000},{"_id":"themes/miccall/layout/layout.ejs","hash":"41bd4dce5bebc122b09908c8336f404dca9db9ab","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/copyright.ejs","hash":"03f20eb5997f7132c232393b203fbca6eaec5205","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/comment.ejs","hash":"c9fb1f98a18ca484cb52d60e2ad2bad25b56dfb2","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/footer.ejs","hash":"003361014b1467ce8062557c6c5952abaa9f00aa","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/gallery_js.ejs","hash":"2d4bf4e503f72f50e61fba396386dc7d57d3165f","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/gallery_head.ejs","hash":"4bd6fb2bdf51a21b7c5b4e95b0575f7e6ac3dcd1","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/head.ejs","hash":"de0a31f65a5efe69ffb04511c18b23c0c94f653a","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/importJS.ejs","hash":"31d45544f38d8016351f95f9ab5a2486c17a3acc","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/headerlogo.ejs","hash":"e9ba05cce80d7f93ba11a9ef5c8a12e958f996f2","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/intro.ejs","hash":"f1e136f0e6ede50d5ce5a3abbc14db63a92c04d3","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/mainfirst.ejs","hash":"ea4fc5b7083f655aaf850e24bad811f5f98f6506","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/mathjax.ejs","hash":"f98a7f202cc7645e42991c5ca75a791890160986","modified":1540215856000},{"_id":"themes/miccall/layout/_partial/nav.ejs","hash":"05a44ee21f99b2ae8b99d924db6f1a2aa3e1e393","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/page-gallery.ejs","hash":"7d89025675f7f59395a888577e248f394f72c03c","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/page-links.ejs","hash":"bfe157e5e9f534cc40475b0470888d251fcc6f44","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/page-tagcloud.ejs","hash":"bdd2cca14c209462c2b894de2563be5a2c6c5599","modified":1540215856000},{"_id":"themes/miccall/source/css/demo.css","hash":"99b020fe28a276c2b128a5048ab1325fc3303b96","modified":1540215856000},{"_id":"themes/miccall/source/css/backcss.css","hash":"65db154a14ccb0e773a14e1d1262553e6f30aec5","modified":1540215856000},{"_id":"themes/miccall/source/css/dropdownMenu.css","hash":"3e44ce25f19c28dcf2c12db1938ccce7a081c10f","modified":1540215856000},{"_id":"themes/miccall/source/css/gallery.css","hash":"4c0178ea898cdc5e010346b56d1c9845fe8da53e","modified":1540215856000},{"_id":"themes/miccall/source/css/font-awesome.min.css","hash":"03eb0a6b53db2655f3ded9bb1a4e4af07cc1efa6","modified":1540215856000},{"_id":"themes/miccall/readme.md","hash":"ee36b0cb76c688ed9fa8990eee5c49d5f2b53525","modified":1540215856000},{"_id":"themes/miccall/source/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1540215856000},{"_id":"themes/miccall/source/css/mic_gallery.css","hash":"5c75b8ab2670599538a1250957cf7c44d0e4cbec","modified":1540215856000},{"_id":"themes/miccall/source/css/item.css","hash":"da1277164b611ccba56beda47960f9075c61dbab","modified":1540215856000},{"_id":"themes/miccall/source/css/noscript.css","hash":"5579ccdecc63139609db824704331d8d4af61538","modified":1540215856000},{"_id":"themes/miccall/source/css/normalize.css","hash":"a0ff1e2feee0b1bb7e54a88fd6367ba3e7435aaf","modified":1540215856000},{"_id":"themes/miccall/source/css/ok_prism.css","hash":"e20586e80aeef3192c727e20d2efe4bd23846d29","modified":1540215856000},{"_id":"themes/miccall/source/css/prism.css","hash":"b39768264f9923a770bcc3f289be0a2bd8e64268","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_coy.css","hash":"24ebf5f3e5f68341522204dcaaf33f429d3c3718","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_dark.css","hash":"8085542cdb4583ffb78b2edd146ebe9511bf668c","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_funky.css","hash":"aa0e3a37fb8ccce44457d7805a13d7c6094d1f5e","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_default.css","hash":"3600bee175b309662e306b50e494ac73495619c2","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_okaidia.css","hash":"e20586e80aeef3192c727e20d2efe4bd23846d29","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_solarized.css","hash":"73759f72dc43870aaf76dca7ef4e61a142b6b4f0","modified":1540215856000},{"_id":"themes/miccall/source/css/prism_twilight.css","hash":"17498435f6d964243c1a50deb563e6003aebe0e6","modified":1540215856000},{"_id":"themes/miccall/source/css/typo.css","hash":"768004dae4204dfbda865d412229feaa618ec3b7","modified":1540215856000},{"_id":"themes/miccall/source/images/12.jpg","hash":"88d68b169744a76ca7b21a258fc0812bc03ee701","modified":1540215856000},{"_id":"themes/miccall/source/images/3123.jpg","hash":"fc005184ff616231647c5dc85c63167040d810ba","modified":1540215856000},{"_id":"themes/miccall/source/images/me.jpg","hash":"b520aa4d797fc0794d93104f260d18a523b67522","modified":1540215856000},{"_id":"themes/miccall/source/images/overlay.png","hash":"e978d81201508e6fcbe0fe95485dae1a4b983a8d","modified":1540215856000},{"_id":"themes/miccall/source/images/pic01.jpg","hash":"774db644cdac607e0d9d72ca65a4961f9a250c11","modified":1540215856000},{"_id":"themes/miccall/source/images/pic02.jpg","hash":"ab77495fef5102f94e36b71d4308cd682dd4b1a8","modified":1540215856000},{"_id":"themes/miccall/source/images/pic03.jpg","hash":"ec46b8b1490a794ea5d4c61058959b9a52ac262f","modified":1540215856000},{"_id":"themes/miccall/source/images/pic04.jpg","hash":"ee299cd40108e50d7151333de525049f8ec4f150","modified":1540215856000},{"_id":"themes/miccall/source/images/pic05.jpg","hash":"b74d638c0aa9e90f94b056db4c0a886e382973f1","modified":1540215856000},{"_id":"themes/miccall/source/images/pic06.jpg","hash":"3d8572663edf8a77b99bdfd93491d4f6a7298aaf","modified":1540215856000},{"_id":"themes/miccall/source/images/pic07.jpg","hash":"de06b4eee3d0e42ddcac415adc8c83466f430253","modified":1540215856000},{"_id":"themes/miccall/source/images/pic08.jpg","hash":"993e8ff91c20b6d28b6302d3a18367547610c58a","modified":1540215856000},{"_id":"themes/miccall/source/images/pic09.jpg","hash":"6aae76e8215e3a6e785ce2a65484e4df03ed5fe9","modified":1540215856000},{"_id":"themes/miccall/source/images/pic10.jpg","hash":"814a661f2966a3c8fe2c89034f62e828f291d770","modified":1540215856000},{"_id":"themes/miccall/source/images/pic11.jpg","hash":"a034beb80041d238f36685706a019a269f159ac1","modified":1540215856000},{"_id":"themes/miccall/source/images/pic12.jpg","hash":"ae93f2674a3b1f1dcbfe9692f2e172e106c02d96","modified":1540215856000},{"_id":"themes/miccall/source/images/picx03.jpg","hash":"cffaa38c9489f131f6f37763b37b937811b316df","modified":1540215856000},{"_id":"themes/miccall/source/js/gallery_skel.min.js","hash":"475a99682e46ad061915a11a9adb3fad82258d3c","modified":1540215856000},{"_id":"themes/miccall/source/js/jquery.scrollex.min.js","hash":"57fa1d1de2eca4fabbe75d6d160edc45cc398075","modified":1540215856000},{"_id":"themes/miccall/source/js/jquery.scrolly.min.js","hash":"6807fda8e44d95117e7007563a4db951818df82b","modified":1540215856000},{"_id":"themes/miccall/source/js/lazyload.min.js","hash":"5348fd7aa4dbefac9d21091c9fd5e263563b5540","modified":1540215856000},{"_id":"themes/miccall/source/js/main.js","hash":"509935fbbf5896ee1e8f2047e961dd58894ae74d","modified":1540215856000},{"_id":"themes/miccall/source/js/mic_gallery.js","hash":"9f5d540f90fcef501df7a9f8272203d1604cd507","modified":1540215856000},{"_id":"themes/miccall/source/js/skel.min.js","hash":"475a99682e46ad061915a11a9adb3fad82258d3c","modified":1540215856000},{"_id":"themes/miccall/source/js/util.js","hash":"3ece9010adc07dd3dc27ced0e22e7ac8bcd16e14","modified":1540215856000},{"_id":"themes/miccall/source/css/images/arrow.svg","hash":"84ad7a183fce70ac31766748919292d9db68c3c8","modified":1540215856000},{"_id":"themes/miccall/source/css/images/arrow-small.svg","hash":"f00360be7c8c06c0ab9d008b3485429cd07b8621","modified":1540215856000},{"_id":"themes/miccall/source/css/images/close-small-alt.svg","hash":"6b0204bb16fc15963977c3921d631209afff8180","modified":1540215856000},{"_id":"themes/miccall/source/css/images/close-small.svg","hash":"23e81571a4e597278e80a593c9e82a0f03d9d167","modified":1540215856000},{"_id":"themes/miccall/source/css/images/close.svg","hash":"7e524252c4610461102bf6da4b41eaa60845b642","modified":1540215856000},{"_id":"themes/miccall/source/css/images/open-small.svg","hash":"7ee24df085722b308c03d3b827fd0769a63e49f2","modified":1540215856000},{"_id":"themes/miccall/source/css/images/open.svg","hash":"f376adaf38d3fc3a2a0209e560a7d181105c75a6","modified":1540215856000},{"_id":"themes/miccall/source/css/images/spinner.svg","hash":"7ef1bb9afa8be7be3509ba644c990b23f5876863","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/01.jpg","hash":"cfc928948301b97ab2873e837284cd83cc3c6cff","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/02.jpg","hash":"1a729f597316a7483ebcf39b5984ced1612a0410","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/03.jpg","hash":"0f8c8109f8b605aa46ef571df1d16e8bdd43d090","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/04.jpg","hash":"806679d4c4398335413b6b53941709a4aef7c3cd","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/05.jpg","hash":"232b0b9e3b6e751ebb2e6c4284651639526200e3","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/06.jpg","hash":"e97b29127a50c69cf445d0591cd94daab0f50e33","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/07.jpg","hash":"eb41675450650b613195806b154c6badbb7eca4d","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/08.jpg","hash":"d31c389218f04bc7ec510ac236fbe343048e3cfc","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/09.jpg","hash":"61fab3aa8ceee938efb4965042ce2b5f51d3a584","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/10.jpg","hash":"9a284568752a54ab9e8e9cd19c41750e05975d2a","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/11.jpg","hash":"cff6219163e3154c1263ee1d7f924c0ae3ccc9e7","modified":1540215856000},{"_id":"themes/miccall/source/images/fulls/12.jpg","hash":"a631491537584e2e23926d9d6f50ce60bb884b18","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/01.jpg","hash":"4f5a2b9fdf44146d60f8dd3a32c81a8419b9148f","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/02.jpg","hash":"396a422cbc1b94b6c9b00f6a34c02b05913230ba","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/03.jpg","hash":"e3915b1cc3283b5ec33f49e2591ebf2e6be2362e","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/04.jpg","hash":"3c60445217b1b52b1fd6cae4578356c564d7624d","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/05.jpg","hash":"3e28c2253db93ba42d16ba9a1f451dbc452fd947","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/06.jpg","hash":"ffc80bb5fe28626d9462e06d9f01d2a5f99b0ae9","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/07.jpg","hash":"45194a98089345e4f135c0f0bfffeee7ccdd9c99","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/08.jpg","hash":"e0384120f6acfa64ad0b5bd0d7e114e9f239294e","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/09.jpg","hash":"bc8a02decf65e44657f02dcc11c7395bfa41ffdb","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/10.jpg","hash":"ccfee49fbca187bad971336cb8fda7dec05ab01e","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/11.jpg","hash":"66a7fb237824b1b2fd550a068bb6a32f5031ab8f","modified":1540215856000},{"_id":"themes/miccall/source/images/thumbs/12.jpg","hash":"17ab685447ed06b6c12e4d42f38111c684221bc7","modified":1540215856000},{"_id":"themes/miccall/source/js/gallery/gallery.js","hash":"8ee48312a183b42a9886211a0ec825ea0d041301","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/changyan/enter.ejs","hash":"e3cfb4f37ea35457f112f3e822e130c930086497","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/changyan/common.ejs","hash":"40e1fc76d6b7f64e226693fb2fe1a6bb17bae245","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/changyan/main.ejs","hash":"77539ff32cc9d1204b848e01b5277fff5cbd61e0","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus/common.ejs","hash":"c11cfceb0906a96399dede5da01ff7fe4787f8a5","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus/enter.ejs","hash":"ecde1e8e072cd6ec5b69287186c3551d246feb78","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus/main.ejs","hash":"e545ec7bab21e2d345e058ed438e2031e3e1f353","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/common.ejs","hash":"d243f576b366a62191066459efcc6fd0ab79d00a","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/enter.ejs","hash":"d82f0296f8bae25223ec44e6e05b817d3a234884","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/main.ejs","hash":"afc734b693b98128f0c45e70b4ecb5702b482829","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/valine/enter.ejs","hash":"0f1c274517b7d9008adbafdf456bbd24a615ffd3","modified":1540215856000},{"_id":"themes/miccall/layout/_widget/comment/valine/main.ejs","hash":"5f026c923ed86a46fd87086deff2ee2a9d13a8f5","modified":1540215856000},{"_id":"themes/miccall/source/css/mic_main.css","hash":"152cca3d857f0184a99d1e8ac54dcb1d19945b3e","modified":1540215856000},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1540215856000},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1540215856000},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1540215856000},{"_id":"themes/miccall/source/images/logo.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1540215856000},{"_id":"themes/miccall/source/js/jquery.min.js","hash":"276c87ff3e1e3155679c318938e74e5c1b76d809","modified":1540215856000},{"_id":"themes/miccall/source/img/logo_miccall.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1540215856000},{"_id":"themes/miccall/source/css/my_link.css","hash":"c9535592792f2271df88c39e4baf8c849e23db17","modified":1540215856000},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1540215856000},{"_id":"themes/miccall/source/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1540215856000},{"_id":"themes/miccall/source/js/prism.js","hash":"0868d642f4661649a37dfb45b93fa30b4d92d4e4","modified":1540215856000},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1540215856000},{"_id":"themes/miccall/source/img/bg.jpg","hash":"af7fe6067d0c21f558502613eed86d8246000bba","modified":1540215856000},{"_id":"themes/miccall/source/images/21.jpg","hash":"0b2570df0e6d9b79a0c50d0b4ce8799bd40ea421","modified":1540215856000},{"_id":"themes/miccall/source/fonts/FZLT.ttf","hash":"24dfab81236612d596c97eb38b3adf5de99f669c","modified":1540215856000},{"_id":"themes/miccall/LICENSE","hash":"12d81f50767d4e09aa7877da077ad9d1b915d75b","modified":1540215856000},{"_id":"public/2021/07/29/7月29日/index.html","hash":"e8ae0b8e65d29b57b9da535f108da924b2fbf08a","modified":1627557082976},{"_id":"public/2021/07/28/hello-world/index.html","hash":"116b8cfebdde3e7ad8123797d014bdc28d7d279c","modified":1627557082976},{"_id":"public/archives/index.html","hash":"201a6cb88fb2d26fdae4c40a49137d168d6acf2b","modified":1627657157924},{"_id":"public/archives/2021/index.html","hash":"201a6cb88fb2d26fdae4c40a49137d168d6acf2b","modified":1627657157924},{"_id":"public/archives/2021/07/index.html","hash":"201a6cb88fb2d26fdae4c40a49137d168d6acf2b","modified":1627657157924},{"_id":"public/index.html","hash":"b81d2c05de2f0883f7817e90345798fc23081b20","modified":1627657157924},{"_id":"public/images/12.jpg","hash":"88d68b169744a76ca7b21a258fc0812bc03ee701","modified":1627523191177},{"_id":"public/images/3123.jpg","hash":"fc005184ff616231647c5dc85c63167040d810ba","modified":1627523191177},{"_id":"public/images/me.jpg","hash":"b520aa4d797fc0794d93104f260d18a523b67522","modified":1627523191177},{"_id":"public/images/overlay.png","hash":"e978d81201508e6fcbe0fe95485dae1a4b983a8d","modified":1627523191177},{"_id":"public/images/pic01.jpg","hash":"774db644cdac607e0d9d72ca65a4961f9a250c11","modified":1627523191177},{"_id":"public/images/pic02.jpg","hash":"ab77495fef5102f94e36b71d4308cd682dd4b1a8","modified":1627523191177},{"_id":"public/images/pic03.jpg","hash":"ec46b8b1490a794ea5d4c61058959b9a52ac262f","modified":1627523191177},{"_id":"public/images/pic04.jpg","hash":"ee299cd40108e50d7151333de525049f8ec4f150","modified":1627523191177},{"_id":"public/images/pic05.jpg","hash":"b74d638c0aa9e90f94b056db4c0a886e382973f1","modified":1627523191177},{"_id":"public/images/pic06.jpg","hash":"3d8572663edf8a77b99bdfd93491d4f6a7298aaf","modified":1627523191177},{"_id":"public/images/pic07.jpg","hash":"de06b4eee3d0e42ddcac415adc8c83466f430253","modified":1627523191177},{"_id":"public/images/pic08.jpg","hash":"993e8ff91c20b6d28b6302d3a18367547610c58a","modified":1627523191177},{"_id":"public/images/pic09.jpg","hash":"6aae76e8215e3a6e785ce2a65484e4df03ed5fe9","modified":1627523191177},{"_id":"public/images/pic10.jpg","hash":"814a661f2966a3c8fe2c89034f62e828f291d770","modified":1627523191177},{"_id":"public/images/pic11.jpg","hash":"a034beb80041d238f36685706a019a269f159ac1","modified":1627523191177},{"_id":"public/images/pic12.jpg","hash":"ae93f2674a3b1f1dcbfe9692f2e172e106c02d96","modified":1627523191177},{"_id":"public/images/picx03.jpg","hash":"cffaa38c9489f131f6f37763b37b937811b316df","modified":1627523191177},{"_id":"public/css/images/arrow.svg","hash":"84ad7a183fce70ac31766748919292d9db68c3c8","modified":1627523191177},{"_id":"public/css/images/arrow-small.svg","hash":"f00360be7c8c06c0ab9d008b3485429cd07b8621","modified":1627523191177},{"_id":"public/css/images/close-small-alt.svg","hash":"6b0204bb16fc15963977c3921d631209afff8180","modified":1627523191177},{"_id":"public/css/images/close-small.svg","hash":"23e81571a4e597278e80a593c9e82a0f03d9d167","modified":1627523191177},{"_id":"public/css/images/close.svg","hash":"7e524252c4610461102bf6da4b41eaa60845b642","modified":1627523191177},{"_id":"public/css/images/open-small.svg","hash":"7ee24df085722b308c03d3b827fd0769a63e49f2","modified":1627523191177},{"_id":"public/css/images/open.svg","hash":"f376adaf38d3fc3a2a0209e560a7d181105c75a6","modified":1627523191177},{"_id":"public/css/images/spinner.svg","hash":"7ef1bb9afa8be7be3509ba644c990b23f5876863","modified":1627523191177},{"_id":"public/images/fulls/02.jpg","hash":"1a729f597316a7483ebcf39b5984ced1612a0410","modified":1627523191177},{"_id":"public/images/fulls/04.jpg","hash":"806679d4c4398335413b6b53941709a4aef7c3cd","modified":1627523191177},{"_id":"public/images/fulls/05.jpg","hash":"232b0b9e3b6e751ebb2e6c4284651639526200e3","modified":1627523191177},{"_id":"public/images/fulls/06.jpg","hash":"e97b29127a50c69cf445d0591cd94daab0f50e33","modified":1627523191177},{"_id":"public/images/fulls/07.jpg","hash":"eb41675450650b613195806b154c6badbb7eca4d","modified":1627523191177},{"_id":"public/images/fulls/01.jpg","hash":"cfc928948301b97ab2873e837284cd83cc3c6cff","modified":1627523191177},{"_id":"public/images/fulls/10.jpg","hash":"9a284568752a54ab9e8e9cd19c41750e05975d2a","modified":1627523191177},{"_id":"public/images/fulls/08.jpg","hash":"d31c389218f04bc7ec510ac236fbe343048e3cfc","modified":1627523191177},{"_id":"public/images/fulls/11.jpg","hash":"cff6219163e3154c1263ee1d7f924c0ae3ccc9e7","modified":1627523191177},{"_id":"public/images/fulls/12.jpg","hash":"a631491537584e2e23926d9d6f50ce60bb884b18","modified":1627523191177},{"_id":"public/images/thumbs/01.jpg","hash":"4f5a2b9fdf44146d60f8dd3a32c81a8419b9148f","modified":1627523191177},{"_id":"public/images/thumbs/02.jpg","hash":"396a422cbc1b94b6c9b00f6a34c02b05913230ba","modified":1627523191177},{"_id":"public/images/thumbs/03.jpg","hash":"e3915b1cc3283b5ec33f49e2591ebf2e6be2362e","modified":1627523191177},{"_id":"public/images/thumbs/04.jpg","hash":"3c60445217b1b52b1fd6cae4578356c564d7624d","modified":1627523191177},{"_id":"public/images/thumbs/05.jpg","hash":"3e28c2253db93ba42d16ba9a1f451dbc452fd947","modified":1627523191177},{"_id":"public/images/thumbs/06.jpg","hash":"ffc80bb5fe28626d9462e06d9f01d2a5f99b0ae9","modified":1627523191177},{"_id":"public/images/thumbs/07.jpg","hash":"45194a98089345e4f135c0f0bfffeee7ccdd9c99","modified":1627523191177},{"_id":"public/images/thumbs/08.jpg","hash":"e0384120f6acfa64ad0b5bd0d7e114e9f239294e","modified":1627523191177},{"_id":"public/images/thumbs/09.jpg","hash":"bc8a02decf65e44657f02dcc11c7395bfa41ffdb","modified":1627523191177},{"_id":"public/images/thumbs/10.jpg","hash":"ccfee49fbca187bad971336cb8fda7dec05ab01e","modified":1627523191177},{"_id":"public/images/thumbs/11.jpg","hash":"66a7fb237824b1b2fd550a068bb6a32f5031ab8f","modified":1627523191177},{"_id":"public/images/thumbs/12.jpg","hash":"17ab685447ed06b6c12e4d42f38111c684221bc7","modified":1627523191177},{"_id":"public/images/fulls/09.jpg","hash":"61fab3aa8ceee938efb4965042ce2b5f51d3a584","modified":1627523191177},{"_id":"public/images/fulls/03.jpg","hash":"0f8c8109f8b605aa46ef571df1d16e8bdd43d090","modified":1627523191177},{"_id":"public/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1627523191177},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1627523191177},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1627523191177},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1627523191177},{"_id":"public/images/logo.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1627523191177},{"_id":"public/img/logo_miccall.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1627523191177},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1627523191177},{"_id":"public/css/demo.css","hash":"99b020fe28a276c2b128a5048ab1325fc3303b96","modified":1627523191177},{"_id":"public/css/backcss.css","hash":"65db154a14ccb0e773a14e1d1262553e6f30aec5","modified":1627523191177},{"_id":"public/css/dropdownMenu.css","hash":"3e44ce25f19c28dcf2c12db1938ccce7a081c10f","modified":1627523191177},{"_id":"public/css/my_link.css","hash":"c9535592792f2271df88c39e4baf8c849e23db17","modified":1627523191177},{"_id":"public/css/normalize.css","hash":"a0ff1e2feee0b1bb7e54a88fd6367ba3e7435aaf","modified":1627523191177},{"_id":"public/css/noscript.css","hash":"5579ccdecc63139609db824704331d8d4af61538","modified":1627523191177},{"_id":"public/css/ok_prism.css","hash":"e20586e80aeef3192c727e20d2efe4bd23846d29","modified":1627523191177},{"_id":"public/css/prism.css","hash":"b39768264f9923a770bcc3f289be0a2bd8e64268","modified":1627523191177},{"_id":"public/css/prism_coy.css","hash":"24ebf5f3e5f68341522204dcaaf33f429d3c3718","modified":1627523191177},{"_id":"public/css/prism_dark.css","hash":"8085542cdb4583ffb78b2edd146ebe9511bf668c","modified":1627523191177},{"_id":"public/css/prism_default.css","hash":"3600bee175b309662e306b50e494ac73495619c2","modified":1627523191177},{"_id":"public/css/prism_funky.css","hash":"aa0e3a37fb8ccce44457d7805a13d7c6094d1f5e","modified":1627523191177},{"_id":"public/css/prism_okaidia.css","hash":"e20586e80aeef3192c727e20d2efe4bd23846d29","modified":1627523191177},{"_id":"public/css/prism_solarized.css","hash":"73759f72dc43870aaf76dca7ef4e61a142b6b4f0","modified":1627523191177},{"_id":"public/css/prism_twilight.css","hash":"17498435f6d964243c1a50deb563e6003aebe0e6","modified":1627523191177},{"_id":"public/css/typo.css","hash":"768004dae4204dfbda865d412229feaa618ec3b7","modified":1627523191177},{"_id":"public/js/gallery_skel.min.js","hash":"475a99682e46ad061915a11a9adb3fad82258d3c","modified":1627523191177},{"_id":"public/js/jquery.scrollex.min.js","hash":"57fa1d1de2eca4fabbe75d6d160edc45cc398075","modified":1627523191177},{"_id":"public/js/jquery.scrolly.min.js","hash":"6807fda8e44d95117e7007563a4db951818df82b","modified":1627523191177},{"_id":"public/js/lazyload.min.js","hash":"5348fd7aa4dbefac9d21091c9fd5e263563b5540","modified":1627523191177},{"_id":"public/js/main.js","hash":"509935fbbf5896ee1e8f2047e961dd58894ae74d","modified":1627523191177},{"_id":"public/js/mic_gallery.js","hash":"9f5d540f90fcef501df7a9f8272203d1604cd507","modified":1627523191177},{"_id":"public/js/util.js","hash":"3ece9010adc07dd3dc27ced0e22e7ac8bcd16e14","modified":1627523191177},{"_id":"public/js/skel.min.js","hash":"475a99682e46ad061915a11a9adb3fad82258d3c","modified":1627523191177},{"_id":"public/css/gallery.css","hash":"4c0178ea898cdc5e010346b56d1c9845fe8da53e","modified":1627523191177},{"_id":"public/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1627523191177},{"_id":"public/css/item.css","hash":"da1277164b611ccba56beda47960f9075c61dbab","modified":1627523191177},{"_id":"public/css/mic_gallery.css","hash":"5c75b8ab2670599538a1250957cf7c44d0e4cbec","modified":1627523191177},{"_id":"public/js/gallery/gallery.js","hash":"8ee48312a183b42a9886211a0ec825ea0d041301","modified":1627523191177},{"_id":"public/css/font-awesome.min.css","hash":"03eb0a6b53db2655f3ded9bb1a4e4af07cc1efa6","modified":1627523191177},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1627523191177},{"_id":"public/images/21.jpg","hash":"0b2570df0e6d9b79a0c50d0b4ce8799bd40ea421","modified":1627523191177},{"_id":"public/css/mic_main.css","hash":"152cca3d857f0184a99d1e8ac54dcb1d19945b3e","modified":1627523191177},{"_id":"public/js/jquery.min.js","hash":"276c87ff3e1e3155679c318938e74e5c1b76d809","modified":1627523191177},{"_id":"public/img/bg.jpg","hash":"af7fe6067d0c21f558502613eed86d8246000bba","modified":1627523191177},{"_id":"public/js/prism.js","hash":"0868d642f4661649a37dfb45b93fa30b4d92d4e4","modified":1627523191177},{"_id":"public/fonts/FZLT.ttf","hash":"24dfab81236612d596c97eb38b3adf5de99f669c","modified":1627523191177},{"_id":"themes/miccall/.DS_Store","hash":"18b40c0a074fb756ef76fd437c21c2205a08a585","modified":1627523233579},{"_id":"themes/miccall/source/img/avator.png","hash":"41e4190dab86b5ccdf79880b87536a301938d5a0","modified":1627455295608},{"_id":"public/img/avator.png","hash":"41e4190dab86b5ccdf79880b87536a301938d5a0","modified":1627555923118},{"_id":"themes/miccall/source/img/avatar.png","hash":"41e4190dab86b5ccdf79880b87536a301938d5a0","modified":1627455295608},{"_id":"public/img/avatar.png","hash":"41e4190dab86b5ccdf79880b87536a301938d5a0","modified":1627556474364},{"_id":"source/_posts/7月30日.md","hash":"6a7563acff3973d25eb73d96993eb483adbe4824","modified":1627655333746},{"_id":"source/_posts/7月30日.assets/image-20210730124507149.png","hash":"60113adc5033a58898ac0dbd09b5fea94300a05c","modified":1627620307150},{"_id":"public/2021/07/30/7月30日/index.html","hash":"5761ebfd2a9acede27ca2ec5a7bcc752c8ee1059","modified":1627657157924}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"7月29日","date":"2021-07-29T01:46:17.000Z","_content":"\nhexo博客的xxxx.github.io的xxxx一定要和GitHub的名称相同\n\nHero g -d 别忘了\n\n![img](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimage.biaobaiju.com%2Fuploads%2F20181007%2F18%2F1538909694-MvtUgmBJzc.jpg&refer=http%3A%2F%2Fimage.biaobaiju.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630144395&t=0eaa79ed341dcf9aed41582917edb3fe)\n\nAtomicLong是作用是对长整形进行原子操作。\n在32位操作系统中，64位的long 和 double 变量由于会被JVM当作两个分离的32位来进行操作，所以不具有原子性。而使用AtomicLong能让long的操作保持原子型。\n\n首先你得了解synchronized（同步锁），atomiclong 可以理解是加了synchronized的long。\n\nalias 别名\n\ngit绑定仓库的命令\n\n\n\n```shell\ngit init //第一次要先初始化一个git目录\ngit remote add origin git@gitee.com:XXX （如果已关联 git remote rm origin 删除）\ngit pull origin master\ngit push -u origin master\n```\n\n\n\nwarning: adding embedded git repository: .deploy_git\n\n当前目录下面有.git文件夹------默认是隐藏的，直接将.git文件夹掉，再重新git add .\n\n\n\n### …or create a new repository on the command line\n\n\n\n```\necho \"# myBlog\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:wzr1005/myBlog.git\ngit push -u origin main\n```\n\n### …or push an existing repository from the command line\n\n\n\n```\ngit remote add origin git@github.com:wzr1005/myBlog.git\ngit branch -M main\ngit push -u origin main\n```\n\n\n\nFielding将他对互联网软件的架构原则，定名为**REST**，即**Representational State Transfer**的缩写。我对这个词组的翻译是\"表现层状态转化\"。\n\n如果一个架构符合REST原则，就称它为RESTful架构。\n\n**要理解RESTful架构，最好的方法就是去理解Representational State Transfer这个词组到底是什么意思，它的每一个词代表了什么涵义。**如果你把这个名称搞懂了，也就不难体会REST是一种什么样的设计。\n\n**三、资源（Resources）**\n\nREST的名称\"表现层状态转化\"中，省略了主语。\"表现层\"其实指的是\"资源\"（Resources）的\"表现层\"。\n\n\"资源\"是一种信息实体，它可以有多种外在表现形式。**我们把\"资源\"具体呈现出来的形式，叫做它的\"表现层\"（Representation）。**\n\n比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。\n\n**五、状态转化（State Transfer）**\n\n访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。\n\n客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：**GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。**\n\n\n\nLog注解\n\n\n\n1. 打开访达,切到应用程序,找到`Pycharm.app`,右键->显示包内容,打开`Contents/MacOS/`\n2. 打开终端,cd 到`Contents/MacOS/`目录,直接将`MacOS`文件夹拖到终端里面,就会显示该文件件的全路径,然后cd进去.\n3. 执行该文件夹下的`pycharm`文件,即:`./pycharm`,之后可以在终端看到输出的信息, 如果没问题会直接打开 `Pycharm`\n\n解决方法:\n\n1. 在终端cd 到`/Users/{替换成自己的用户名}/Library/Application Support/JetBrains/PyCharm2020.1/`,这个文件夹下有一个`pycharm.vmoptions`的文件,我们需要将这个文件删除.\n2. 终端执行 `rm -f pycharm.vmoptions`\n3. 重新打开即可.\n\n说明：\n `cd 到Application Support时 提示找不到路径的问题`\n 原因：`/Application Support/` 这个地方`Application` 和 `Support` 中间有一个空格，需要转义。\n\n正确的为：\n `cd /Users/{替换成自己的用户名}/Library/Application\\ Support/JetBrains/PyCharm2020.1/`\n\n`/PyCharm2020.1/` 这个路径根据安装版本的不同路径会有所不同。\n\n\n\n安装py3 直接去官网就可以，安装了之后，需要重启pycharm\n\n更新pip3\n\nsudo pip3 install --upgrade pip\n\npylab安装不能像其他scipy等计算包一样直接pip install，它是模块matplotlib下的一个包，需要先安装matplotlib等，再用import导入。\n\n%matplotlib inline。可以注释掉\n\nlambda表达式的语法格式如下：\n\n(parameters) -> expression 或 (parameters) ->{ statements; }\n\n```Java\nhomeApiTotalMapper.toDto(homeApiTotalRepository\n        .findAll((root, criteriaQuery, criteriaBuilder) -> QueryHelp.getPredicate(root, criteria, criteriaBuilder)));\n```\n\n\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi0xY2M4N2U4MmZiYTA4NzJjMmNhZTNmZWUwOGU4ZmU0MV9oZC5qcGc)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0xNDVhNTU2ZDg2ODA2YzMxNjMzOTFhMTM0MjhlM2YwM19oZC5qcGc)\n\n\n\n\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi1hNzEyNzUzYjQyOTcyZTA5NGE1NDhhZTAyZmE4Mjk4N19oZC5qcGc)\n\n这样，我们就成功的非常优雅的把“一块代码”赋给了一个变量。**而“这块代码”，或者说“这个被赋给一个变量的函数”，就是一个Lambda表达式**。\n\n但是这里仍然有一个问题，就是变量aBlockOfCode的类型应该是什么？\n\n在Java 8里面，**所有的Lambda的类型都是一个接口，而Lambda表达式本身，也就是”那段代码“，需要是这个接口的实现。**这是我认为理解Lambda的一个关键所在，简而言之就是，**Lambda表达式本身就是一个接口的实现**。直接这样说可能还是有点让人困扰，我们继续看看例子。我们给上面的aBlockOfCode加上一个类型：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi01NWRlNjYwNjBiNGNiNzAxOTNkZGM3ZmVhMjAxYjI1N19oZC5qcGc)\n\n这种只有**一个接口函数需要被实现的接口类型，我们叫它”函数式接口“。**为了避免后来的人在这个接口中增加接口函数导致其有多个接口函数需要被实现，变成\"非函数接口”，我们可以在这个上面加上一个声明@FunctionalInterface, 这样别人就无法在里面添加新的接口函数了：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0yYzU3ZTc0MTFkZTIyN2QxZWIwOWMzMjdkMDFmYjc2Nl9oZC5qcGc)\n\n这样，我们就得到了一个完整的Lambda表达式声明：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0wMmVlZGM1MjhmY2VlMTE1ZjVlZDBiN2IwNDU4NDZkN19oZC5qcGc)\n\n\n\n这两种写法本质上是等价的。但是显然，Java 8中的写法更加优雅简洁。并且，由于Lambda可以直接赋值给一个变量，**我们就可以直接把Lambda作为参数传给函数, 而传统的Java必须有明确的接口实现的定义，初始化才行：**\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0yODYwNmY0MzI4MzA4YmFmN2Y3MGEzNmJkNjg5ZTVlYV9oZC5qcGc)\n\n","source":"_posts/7月29日.md","raw":"---\ntitle: 7月29日\ndate: 2021-07-29 09:46:17\ntags:\n---\n\nhexo博客的xxxx.github.io的xxxx一定要和GitHub的名称相同\n\nHero g -d 别忘了\n\n![img](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimage.biaobaiju.com%2Fuploads%2F20181007%2F18%2F1538909694-MvtUgmBJzc.jpg&refer=http%3A%2F%2Fimage.biaobaiju.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630144395&t=0eaa79ed341dcf9aed41582917edb3fe)\n\nAtomicLong是作用是对长整形进行原子操作。\n在32位操作系统中，64位的long 和 double 变量由于会被JVM当作两个分离的32位来进行操作，所以不具有原子性。而使用AtomicLong能让long的操作保持原子型。\n\n首先你得了解synchronized（同步锁），atomiclong 可以理解是加了synchronized的long。\n\nalias 别名\n\ngit绑定仓库的命令\n\n\n\n```shell\ngit init //第一次要先初始化一个git目录\ngit remote add origin git@gitee.com:XXX （如果已关联 git remote rm origin 删除）\ngit pull origin master\ngit push -u origin master\n```\n\n\n\nwarning: adding embedded git repository: .deploy_git\n\n当前目录下面有.git文件夹------默认是隐藏的，直接将.git文件夹掉，再重新git add .\n\n\n\n### …or create a new repository on the command line\n\n\n\n```\necho \"# myBlog\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:wzr1005/myBlog.git\ngit push -u origin main\n```\n\n### …or push an existing repository from the command line\n\n\n\n```\ngit remote add origin git@github.com:wzr1005/myBlog.git\ngit branch -M main\ngit push -u origin main\n```\n\n\n\nFielding将他对互联网软件的架构原则，定名为**REST**，即**Representational State Transfer**的缩写。我对这个词组的翻译是\"表现层状态转化\"。\n\n如果一个架构符合REST原则，就称它为RESTful架构。\n\n**要理解RESTful架构，最好的方法就是去理解Representational State Transfer这个词组到底是什么意思，它的每一个词代表了什么涵义。**如果你把这个名称搞懂了，也就不难体会REST是一种什么样的设计。\n\n**三、资源（Resources）**\n\nREST的名称\"表现层状态转化\"中，省略了主语。\"表现层\"其实指的是\"资源\"（Resources）的\"表现层\"。\n\n\"资源\"是一种信息实体，它可以有多种外在表现形式。**我们把\"资源\"具体呈现出来的形式，叫做它的\"表现层\"（Representation）。**\n\n比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。\n\n**五、状态转化（State Transfer）**\n\n访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。\n\n客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：**GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。**\n\n\n\nLog注解\n\n\n\n1. 打开访达,切到应用程序,找到`Pycharm.app`,右键->显示包内容,打开`Contents/MacOS/`\n2. 打开终端,cd 到`Contents/MacOS/`目录,直接将`MacOS`文件夹拖到终端里面,就会显示该文件件的全路径,然后cd进去.\n3. 执行该文件夹下的`pycharm`文件,即:`./pycharm`,之后可以在终端看到输出的信息, 如果没问题会直接打开 `Pycharm`\n\n解决方法:\n\n1. 在终端cd 到`/Users/{替换成自己的用户名}/Library/Application Support/JetBrains/PyCharm2020.1/`,这个文件夹下有一个`pycharm.vmoptions`的文件,我们需要将这个文件删除.\n2. 终端执行 `rm -f pycharm.vmoptions`\n3. 重新打开即可.\n\n说明：\n `cd 到Application Support时 提示找不到路径的问题`\n 原因：`/Application Support/` 这个地方`Application` 和 `Support` 中间有一个空格，需要转义。\n\n正确的为：\n `cd /Users/{替换成自己的用户名}/Library/Application\\ Support/JetBrains/PyCharm2020.1/`\n\n`/PyCharm2020.1/` 这个路径根据安装版本的不同路径会有所不同。\n\n\n\n安装py3 直接去官网就可以，安装了之后，需要重启pycharm\n\n更新pip3\n\nsudo pip3 install --upgrade pip\n\npylab安装不能像其他scipy等计算包一样直接pip install，它是模块matplotlib下的一个包，需要先安装matplotlib等，再用import导入。\n\n%matplotlib inline。可以注释掉\n\nlambda表达式的语法格式如下：\n\n(parameters) -> expression 或 (parameters) ->{ statements; }\n\n```Java\nhomeApiTotalMapper.toDto(homeApiTotalRepository\n        .findAll((root, criteriaQuery, criteriaBuilder) -> QueryHelp.getPredicate(root, criteria, criteriaBuilder)));\n```\n\n\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi0xY2M4N2U4MmZiYTA4NzJjMmNhZTNmZWUwOGU4ZmU0MV9oZC5qcGc)\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0xNDVhNTU2ZDg2ODA2YzMxNjMzOTFhMTM0MjhlM2YwM19oZC5qcGc)\n\n\n\n\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi1hNzEyNzUzYjQyOTcyZTA5NGE1NDhhZTAyZmE4Mjk4N19oZC5qcGc)\n\n这样，我们就成功的非常优雅的把“一块代码”赋给了一个变量。**而“这块代码”，或者说“这个被赋给一个变量的函数”，就是一个Lambda表达式**。\n\n但是这里仍然有一个问题，就是变量aBlockOfCode的类型应该是什么？\n\n在Java 8里面，**所有的Lambda的类型都是一个接口，而Lambda表达式本身，也就是”那段代码“，需要是这个接口的实现。**这是我认为理解Lambda的一个关键所在，简而言之就是，**Lambda表达式本身就是一个接口的实现**。直接这样说可能还是有点让人困扰，我们继续看看例子。我们给上面的aBlockOfCode加上一个类型：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi01NWRlNjYwNjBiNGNiNzAxOTNkZGM3ZmVhMjAxYjI1N19oZC5qcGc)\n\n这种只有**一个接口函数需要被实现的接口类型，我们叫它”函数式接口“。**为了避免后来的人在这个接口中增加接口函数导致其有多个接口函数需要被实现，变成\"非函数接口”，我们可以在这个上面加上一个声明@FunctionalInterface, 这样别人就无法在里面添加新的接口函数了：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0yYzU3ZTc0MTFkZTIyN2QxZWIwOWMzMjdkMDFmYjc2Nl9oZC5qcGc)\n\n这样，我们就得到了一个完整的Lambda表达式声明：\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0wMmVlZGM1MjhmY2VlMTE1ZjVlZDBiN2IwNDU4NDZkN19oZC5qcGc)\n\n\n\n这两种写法本质上是等价的。但是显然，Java 8中的写法更加优雅简洁。并且，由于Lambda可以直接赋值给一个变量，**我们就可以直接把Lambda作为参数传给函数, 而传统的Java必须有明确的接口实现的定义，初始化才行：**\n\n![img](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0yODYwNmY0MzI4MzA4YmFmN2Y3MGEzNmJkNjg5ZTVlYV9oZC5qcGc)\n\n","slug":"7月29日","published":1,"updated":"2021-07-29T09:53:38.860Z","_id":"ckro9abn10000rl76ghqjbr18","comments":1,"layout":"post","photos":[],"link":"","content":"<p>hexo博客的xxxx.github.io的xxxx一定要和GitHub的名称相同</p>\n<p>Hero g -d 别忘了</p>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimage.biaobaiju.com%2Fuploads%2F20181007%2F18%2F1538909694-MvtUgmBJzc.jpg&refer=http%3A%2F%2Fimage.biaobaiju.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630144395&t=0eaa79ed341dcf9aed41582917edb3fe\" alt=\"img\"></p>\n<p>AtomicLong是作用是对长整形进行原子操作。<br>在32位操作系统中，64位的long 和 double 变量由于会被JVM当作两个分离的32位来进行操作，所以不具有原子性。而使用AtomicLong能让long的操作保持原子型。</p>\n<p>首先你得了解synchronized（同步锁），atomiclong 可以理解是加了synchronized的long。</p>\n<p>alias 别名</p>\n<p>git绑定仓库的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init //第一次要先初始化一个git目录</span><br><span class=\"line\">git remote add origin git@gitee.com:XXX （如果已关联 git remote rm origin 删除）</span><br><span class=\"line\">git pull origin master</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n<p>warning: adding embedded git repository: .deploy_git</p>\n<p>当前目录下面有.git文件夹——默认是隐藏的，直接将.git文件夹掉，再重新git add .</p>\n<h3 id=\"…or-create-a-new-repository-on-the-command-line\"><a href=\"#…or-create-a-new-repository-on-the-command-line\" class=\"headerlink\" title=\"…or create a new repository on the command line\"></a>…or create a new repository on the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# myBlog&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin git@github.com:wzr1005/myBlog.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"…or-push-an-existing-repository-from-the-command-line\"><a href=\"#…or-push-an-existing-repository-from-the-command-line\" class=\"headerlink\" title=\"…or push an existing repository from the command line\"></a>…or push an existing repository from the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:wzr1005/myBlog.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Fielding将他对互联网软件的架构原则，定名为<strong>REST</strong>，即<strong>Representational State Transfer</strong>的缩写。我对这个词组的翻译是”表现层状态转化”。</p>\n<p>如果一个架构符合REST原则，就称它为RESTful架构。</p>\n<p><strong>要理解RESTful架构，最好的方法就是去理解Representational State Transfer这个词组到底是什么意思，它的每一个词代表了什么涵义。</strong>如果你把这个名称搞懂了，也就不难体会REST是一种什么样的设计。</p>\n<p><strong>三、资源（Resources）</strong></p>\n<p>REST的名称”表现层状态转化”中，省略了主语。”表现层”其实指的是”资源”（Resources）的”表现层”。</p>\n<p>“资源”是一种信息实体，它可以有多种外在表现形式。<strong>我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）。</strong></p>\n<p>比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。</p>\n<p><strong>五、状态转化（State Transfer）</strong></p>\n<p>访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。</p>\n<p>客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：<strong>GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。</strong></p>\n<p>Log注解</p>\n<ol>\n<li>打开访达,切到应用程序,找到<code>Pycharm.app</code>,右键-&gt;显示包内容,打开<code>Contents/MacOS/</code></li>\n<li>打开终端,cd 到<code>Contents/MacOS/</code>目录,直接将<code>MacOS</code>文件夹拖到终端里面,就会显示该文件件的全路径,然后cd进去.</li>\n<li>执行该文件夹下的<code>pycharm</code>文件,即:<code>./pycharm</code>,之后可以在终端看到输出的信息, 如果没问题会直接打开 <code>Pycharm</code></li>\n</ol>\n<p>解决方法:</p>\n<ol>\n<li>在终端cd 到<code>/Users/&#123;替换成自己的用户名&#125;/Library/Application Support/JetBrains/PyCharm2020.1/</code>,这个文件夹下有一个<code>pycharm.vmoptions</code>的文件,我们需要将这个文件删除.</li>\n<li>终端执行 <code>rm -f pycharm.vmoptions</code></li>\n<li>重新打开即可.</li>\n</ol>\n<p>说明：<br> <code>cd 到Application Support时 提示找不到路径的问题</code><br> 原因：<code>/Application Support/</code> 这个地方<code>Application</code> 和 <code>Support</code> 中间有一个空格，需要转义。</p>\n<p>正确的为：<br> <code>cd /Users/&#123;替换成自己的用户名&#125;/Library/Application\\ Support/JetBrains/PyCharm2020.1/</code></p>\n<p><code>/PyCharm2020.1/</code> 这个路径根据安装版本的不同路径会有所不同。</p>\n<p>安装py3 直接去官网就可以，安装了之后，需要重启pycharm</p>\n<p>更新pip3</p>\n<p>sudo pip3 install –upgrade pip</p>\n<p>pylab安装不能像其他scipy等计算包一样直接pip install，它是模块matplotlib下的一个包，需要先安装matplotlib等，再用import导入。</p>\n<p>%matplotlib inline。可以注释掉</p>\n<p>lambda表达式的语法格式如下：</p>\n<p>(parameters) -&gt; expression 或 (parameters) -&gt;{ statements; }</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">homeApiTotalMapper.toDto(homeApiTotalRepository</span><br><span class=\"line\">        .findAll((root, criteriaQuery, criteriaBuilder) -&gt; QueryHelp.getPredicate(root, criteria, criteriaBuilder)));</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi0xY2M4N2U4MmZiYTA4NzJjMmNhZTNmZWUwOGU4ZmU0MV9oZC5qcGc\" alt=\"img\"></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0xNDVhNTU2ZDg2ODA2YzMxNjMzOTFhMTM0MjhlM2YwM19oZC5qcGc\" alt=\"img\"></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi1hNzEyNzUzYjQyOTcyZTA5NGE1NDhhZTAyZmE4Mjk4N19oZC5qcGc\" alt=\"img\"></p>\n<p>这样，我们就成功的非常优雅的把“一块代码”赋给了一个变量。<strong>而“这块代码”，或者说“这个被赋给一个变量的函数”，就是一个Lambda表达式</strong>。</p>\n<p>但是这里仍然有一个问题，就是变量aBlockOfCode的类型应该是什么？</p>\n<p>在Java 8里面，<strong>所有的Lambda的类型都是一个接口，而Lambda表达式本身，也就是”那段代码“，需要是这个接口的实现。</strong>这是我认为理解Lambda的一个关键所在，简而言之就是，<strong>Lambda表达式本身就是一个接口的实现</strong>。直接这样说可能还是有点让人困扰，我们继续看看例子。我们给上面的aBlockOfCode加上一个类型：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi01NWRlNjYwNjBiNGNiNzAxOTNkZGM3ZmVhMjAxYjI1N19oZC5qcGc\" alt=\"img\"></p>\n<p>这种只有<strong>一个接口函数需要被实现的接口类型，我们叫它”函数式接口“。</strong>为了避免后来的人在这个接口中增加接口函数导致其有多个接口函数需要被实现，变成”非函数接口”，我们可以在这个上面加上一个声明@FunctionalInterface, 这样别人就无法在里面添加新的接口函数了：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0yYzU3ZTc0MTFkZTIyN2QxZWIwOWMzMjdkMDFmYjc2Nl9oZC5qcGc\" alt=\"img\"></p>\n<p>这样，我们就得到了一个完整的Lambda表达式声明：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0wMmVlZGM1MjhmY2VlMTE1ZjVlZDBiN2IwNDU4NDZkN19oZC5qcGc\" alt=\"img\"></p>\n<p>这两种写法本质上是等价的。但是显然，Java 8中的写法更加优雅简洁。并且，由于Lambda可以直接赋值给一个变量，<strong>我们就可以直接把Lambda作为参数传给函数, 而传统的Java必须有明确的接口实现的定义，初始化才行：</strong></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0yODYwNmY0MzI4MzA4YmFmN2Y3MGEzNmJkNjg5ZTVlYV9oZC5qcGc\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>hexo博客的xxxx.github.io的xxxx一定要和GitHub的名称相同</p>\n<p>Hero g -d 别忘了</p>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimage.biaobaiju.com%2Fuploads%2F20181007%2F18%2F1538909694-MvtUgmBJzc.jpg&refer=http%3A%2F%2Fimage.biaobaiju.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630144395&t=0eaa79ed341dcf9aed41582917edb3fe\" alt=\"img\"></p>\n<p>AtomicLong是作用是对长整形进行原子操作。<br>在32位操作系统中，64位的long 和 double 变量由于会被JVM当作两个分离的32位来进行操作，所以不具有原子性。而使用AtomicLong能让long的操作保持原子型。</p>\n<p>首先你得了解synchronized（同步锁），atomiclong 可以理解是加了synchronized的long。</p>\n<p>alias 别名</p>\n<p>git绑定仓库的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init //第一次要先初始化一个git目录</span><br><span class=\"line\">git remote add origin git@gitee.com:XXX （如果已关联 git remote rm origin 删除）</span><br><span class=\"line\">git pull origin master</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n<p>warning: adding embedded git repository: .deploy_git</p>\n<p>当前目录下面有.git文件夹——默认是隐藏的，直接将.git文件夹掉，再重新git add .</p>\n<h3 id=\"…or-create-a-new-repository-on-the-command-line\"><a href=\"#…or-create-a-new-repository-on-the-command-line\" class=\"headerlink\" title=\"…or create a new repository on the command line\"></a>…or create a new repository on the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# myBlog&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin git@github.com:wzr1005/myBlog.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"…or-push-an-existing-repository-from-the-command-line\"><a href=\"#…or-push-an-existing-repository-from-the-command-line\" class=\"headerlink\" title=\"…or push an existing repository from the command line\"></a>…or push an existing repository from the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:wzr1005/myBlog.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Fielding将他对互联网软件的架构原则，定名为<strong>REST</strong>，即<strong>Representational State Transfer</strong>的缩写。我对这个词组的翻译是”表现层状态转化”。</p>\n<p>如果一个架构符合REST原则，就称它为RESTful架构。</p>\n<p><strong>要理解RESTful架构，最好的方法就是去理解Representational State Transfer这个词组到底是什么意思，它的每一个词代表了什么涵义。</strong>如果你把这个名称搞懂了，也就不难体会REST是一种什么样的设计。</p>\n<p><strong>三、资源（Resources）</strong></p>\n<p>REST的名称”表现层状态转化”中，省略了主语。”表现层”其实指的是”资源”（Resources）的”表现层”。</p>\n<p>“资源”是一种信息实体，它可以有多种外在表现形式。<strong>我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）。</strong></p>\n<p>比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。</p>\n<p><strong>五、状态转化（State Transfer）</strong></p>\n<p>访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。</p>\n<p>客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：<strong>GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。</strong></p>\n<p>Log注解</p>\n<ol>\n<li>打开访达,切到应用程序,找到<code>Pycharm.app</code>,右键-&gt;显示包内容,打开<code>Contents/MacOS/</code></li>\n<li>打开终端,cd 到<code>Contents/MacOS/</code>目录,直接将<code>MacOS</code>文件夹拖到终端里面,就会显示该文件件的全路径,然后cd进去.</li>\n<li>执行该文件夹下的<code>pycharm</code>文件,即:<code>./pycharm</code>,之后可以在终端看到输出的信息, 如果没问题会直接打开 <code>Pycharm</code></li>\n</ol>\n<p>解决方法:</p>\n<ol>\n<li>在终端cd 到<code>/Users/&#123;替换成自己的用户名&#125;/Library/Application Support/JetBrains/PyCharm2020.1/</code>,这个文件夹下有一个<code>pycharm.vmoptions</code>的文件,我们需要将这个文件删除.</li>\n<li>终端执行 <code>rm -f pycharm.vmoptions</code></li>\n<li>重新打开即可.</li>\n</ol>\n<p>说明：<br> <code>cd 到Application Support时 提示找不到路径的问题</code><br> 原因：<code>/Application Support/</code> 这个地方<code>Application</code> 和 <code>Support</code> 中间有一个空格，需要转义。</p>\n<p>正确的为：<br> <code>cd /Users/&#123;替换成自己的用户名&#125;/Library/Application\\ Support/JetBrains/PyCharm2020.1/</code></p>\n<p><code>/PyCharm2020.1/</code> 这个路径根据安装版本的不同路径会有所不同。</p>\n<p>安装py3 直接去官网就可以，安装了之后，需要重启pycharm</p>\n<p>更新pip3</p>\n<p>sudo pip3 install –upgrade pip</p>\n<p>pylab安装不能像其他scipy等计算包一样直接pip install，它是模块matplotlib下的一个包，需要先安装matplotlib等，再用import导入。</p>\n<p>%matplotlib inline。可以注释掉</p>\n<p>lambda表达式的语法格式如下：</p>\n<p>(parameters) -&gt; expression 或 (parameters) -&gt;{ statements; }</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">homeApiTotalMapper.toDto(homeApiTotalRepository</span><br><span class=\"line\">        .findAll((root, criteriaQuery, criteriaBuilder) -&gt; QueryHelp.getPredicate(root, criteria, criteriaBuilder)));</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMyLnpoaW1nLmNvbS84MC92Mi0xY2M4N2U4MmZiYTA4NzJjMmNhZTNmZWUwOGU4ZmU0MV9oZC5qcGc\" alt=\"img\"></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0xNDVhNTU2ZDg2ODA2YzMxNjMzOTFhMTM0MjhlM2YwM19oZC5qcGc\" alt=\"img\"></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi1hNzEyNzUzYjQyOTcyZTA5NGE1NDhhZTAyZmE4Mjk4N19oZC5qcGc\" alt=\"img\"></p>\n<p>这样，我们就成功的非常优雅的把“一块代码”赋给了一个变量。<strong>而“这块代码”，或者说“这个被赋给一个变量的函数”，就是一个Lambda表达式</strong>。</p>\n<p>但是这里仍然有一个问题，就是变量aBlockOfCode的类型应该是什么？</p>\n<p>在Java 8里面，<strong>所有的Lambda的类型都是一个接口，而Lambda表达式本身，也就是”那段代码“，需要是这个接口的实现。</strong>这是我认为理解Lambda的一个关键所在，简而言之就是，<strong>Lambda表达式本身就是一个接口的实现</strong>。直接这样说可能还是有点让人困扰，我们继续看看例子。我们给上面的aBlockOfCode加上一个类型：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi01NWRlNjYwNjBiNGNiNzAxOTNkZGM3ZmVhMjAxYjI1N19oZC5qcGc\" alt=\"img\"></p>\n<p>这种只有<strong>一个接口函数需要被实现的接口类型，我们叫它”函数式接口“。</strong>为了避免后来的人在这个接口中增加接口函数导致其有多个接口函数需要被实现，变成”非函数接口”，我们可以在这个上面加上一个声明@FunctionalInterface, 这样别人就无法在里面添加新的接口函数了：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0yYzU3ZTc0MTFkZTIyN2QxZWIwOWMzMjdkMDFmYjc2Nl9oZC5qcGc\" alt=\"img\"></p>\n<p>这样，我们就得到了一个完整的Lambda表达式声明：</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS84MC92Mi0wMmVlZGM1MjhmY2VlMTE1ZjVlZDBiN2IwNDU4NDZkN19oZC5qcGc\" alt=\"img\"></p>\n<p>这两种写法本质上是等价的。但是显然，Java 8中的写法更加优雅简洁。并且，由于Lambda可以直接赋值给一个变量，<strong>我们就可以直接把Lambda作为参数传给函数, 而传统的Java必须有明确的接口实现的定义，初始化才行：</strong></p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS84MC92Mi0yODYwNmY0MzI4MzA4YmFmN2Y3MGEzNmJkNjg5ZTVlYV9oZC5qcGc\" alt=\"img\"></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-07-28T11:48:27.920Z","updated":"2021-07-28T11:48:27.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckro9abno0001rl765pow89q2","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"7月30日","date":"2021-07-30T01:17:39.000Z","_content":"\n今天打算debug一下，用postman模拟请求，调试一个搜索的功能，把沿路的功能怎么实现的看看。\n\n\n\nJPA写个功能\n\n刚刚写了一个基于JPA的deleteTest，接口的\n\n添加公钥的ssh命令，就说本地生成一个公钥 然后加到git里面\n\n```shell\ncd ~/.ssh #检查本季已存在的ssh秘钥，如果提示No Such file说明是第一次使用git\nssh-keygen -t rsa -C 邮件地址\n---连续三次回车最终生成一个文件中用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，并打开复制里面的内容，打开你的GitHub主页，进入个人设置SSH and GPG keys -> New SSH key\n将刚复制的内容粘贴到key那里，title随便填，保存。测试是否成功\nssh -T git@github.com # 注意邮箱地址不用改\n如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：\nYou've successfully authenticated, but GitHub does not provide shell access.\n\n\n看到这个信息说明SSH已配置成功！\n此时你还需要配置：\n$ git config --global user.name \"liuxianan\"// 你的github用户名，非昵称 $ git config --global user.email \"xxx@qq.com\"// 填写你的github注册邮箱\n```\n\n接口类创建的对象需要autowire注入\n\n查看Mac是x86还是arm，在终端中输入\n\n```shell\nuname -an\n```\n\n![image-20210730124507149](/Users/wuzhenren/myblog/source/_posts/7月30日.assets/image-20210730124507149.png)\n\n\n\nspring中注解@Resource 与@Autowire 区别\n@Resource与@Autowired的区别?\n1.@Autowired按byType自动注入。\n\n2.@Resource默认按byName自动注入。\n\n但是@Resource有两个属性是比较重要的，分是name和type；\n\n如果使用name属性，则使用byName的自动注入策略，而使用type属性时则使用byType自动注入策略;\n\n3.@Autowired是spring自己定义的注解，@Resource是J2EE的，由JSR-250规范定义。\n\nPS：个人建议用@Resource，不为什么，减少与spring的耦合。\n\n**创建了一个接口对象，就可以用所有实现了该接口函数的类对象去实例化这个对象。**\n\nTest 加上RunWith和@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n\n再加上@Test注解，可以在不需要main函数下执行测试类\n\n创建Springboot项目可以用SpringInitialize 勾选springboot Web 、Jpa、Mysql\n\n\n\n/Users/wuzhenren/Downloads\n\n~/Users/wuzhenren/Downloads/cmake-3.21.1.tar\n\n~/Users/wuzhenren/Library/Caches/Homebrew/downloads/cmake-3.21.1.tar\n\n\n\nmac的mysql下载好之后，设置环境变量\n\n```shell\ncd /usr/local/mysql/bin\nvim ~/.bash_profile\n保存\nexport PATH=$PATH:/usr/local/mysql/bin\n:wq\n随时可以跑mysql命令\n```\n\n\n\n接下来要重置密码：\n\nmysqladmin -u root -p password ____\n\n\n\n\n\nHero 环境出问题，\n\n```shell\nsudo npm install -g hexo-cli\n\n```\n\n解决。\n\n","source":"_posts/7月30日.md","raw":"---\ntitle: 7月30日\ndate: 2021-07-30 09:17:39\ntags:\n---\n\n今天打算debug一下，用postman模拟请求，调试一个搜索的功能，把沿路的功能怎么实现的看看。\n\n\n\nJPA写个功能\n\n刚刚写了一个基于JPA的deleteTest，接口的\n\n添加公钥的ssh命令，就说本地生成一个公钥 然后加到git里面\n\n```shell\ncd ~/.ssh #检查本季已存在的ssh秘钥，如果提示No Such file说明是第一次使用git\nssh-keygen -t rsa -C 邮件地址\n---连续三次回车最终生成一个文件中用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，并打开复制里面的内容，打开你的GitHub主页，进入个人设置SSH and GPG keys -> New SSH key\n将刚复制的内容粘贴到key那里，title随便填，保存。测试是否成功\nssh -T git@github.com # 注意邮箱地址不用改\n如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：\nYou've successfully authenticated, but GitHub does not provide shell access.\n\n\n看到这个信息说明SSH已配置成功！\n此时你还需要配置：\n$ git config --global user.name \"liuxianan\"// 你的github用户名，非昵称 $ git config --global user.email \"xxx@qq.com\"// 填写你的github注册邮箱\n```\n\n接口类创建的对象需要autowire注入\n\n查看Mac是x86还是arm，在终端中输入\n\n```shell\nuname -an\n```\n\n![image-20210730124507149](/Users/wuzhenren/myblog/source/_posts/7月30日.assets/image-20210730124507149.png)\n\n\n\nspring中注解@Resource 与@Autowire 区别\n@Resource与@Autowired的区别?\n1.@Autowired按byType自动注入。\n\n2.@Resource默认按byName自动注入。\n\n但是@Resource有两个属性是比较重要的，分是name和type；\n\n如果使用name属性，则使用byName的自动注入策略，而使用type属性时则使用byType自动注入策略;\n\n3.@Autowired是spring自己定义的注解，@Resource是J2EE的，由JSR-250规范定义。\n\nPS：个人建议用@Resource，不为什么，减少与spring的耦合。\n\n**创建了一个接口对象，就可以用所有实现了该接口函数的类对象去实例化这个对象。**\n\nTest 加上RunWith和@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n\n再加上@Test注解，可以在不需要main函数下执行测试类\n\n创建Springboot项目可以用SpringInitialize 勾选springboot Web 、Jpa、Mysql\n\n\n\n/Users/wuzhenren/Downloads\n\n~/Users/wuzhenren/Downloads/cmake-3.21.1.tar\n\n~/Users/wuzhenren/Library/Caches/Homebrew/downloads/cmake-3.21.1.tar\n\n\n\nmac的mysql下载好之后，设置环境变量\n\n```shell\ncd /usr/local/mysql/bin\nvim ~/.bash_profile\n保存\nexport PATH=$PATH:/usr/local/mysql/bin\n:wq\n随时可以跑mysql命令\n```\n\n\n\n接下来要重置密码：\n\nmysqladmin -u root -p password ____\n\n\n\n\n\nHero 环境出问题，\n\n```shell\nsudo npm install -g hexo-cli\n\n```\n\n解决。\n\n","slug":"7月30日","published":1,"updated":"2021-07-30T14:28:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckrqh1pcy0000vqf1ehs66sfn","content":"<p>今天打算debug一下，用postman模拟请求，调试一个搜索的功能，把沿路的功能怎么实现的看看。</p>\n<p>JPA写个功能</p>\n<p>刚刚写了一个基于JPA的deleteTest，接口的</p>\n<p>添加公钥的ssh命令，就说本地生成一个公钥 然后加到git里面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh #检查本季已存在的ssh秘钥，如果提示No Such file说明是第一次使用git</span><br><span class=\"line\">ssh-keygen -t rsa -C 邮件地址</span><br><span class=\"line\">---连续三次回车最终生成一个文件中用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，并打开复制里面的内容，打开你的GitHub主页，进入个人设置SSH and GPG keys -&gt; New SSH key</span><br><span class=\"line\">将刚复制的内容粘贴到key那里，title随便填，保存。测试是否成功</span><br><span class=\"line\">ssh -T git@github.com # 注意邮箱地址不用改</span><br><span class=\"line\">如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</span><br><span class=\"line\">You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">看到这个信息说明SSH已配置成功！</span><br><span class=\"line\">此时你还需要配置：</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name <span class=\"string\">&quot;liuxianan&quot;</span>// 你的github用户名，非昵称 $ git config --global user.email <span class=\"string\">&quot;xxx@qq.com&quot;</span>// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure>\n\n<p>接口类创建的对象需要autowire注入</p>\n<p>查看Mac是x86还是arm，在终端中输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -an</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/Users/wuzhenren/myblog/source/_posts/7%E6%9C%8830%E6%97%A5.assets/image-20210730124507149.png\" alt=\"image-20210730124507149\"></p>\n<p>spring中注解@Resource 与@Autowire 区别<br>@Resource与@Autowired的区别?<br>1.@Autowired按byType自动注入。</p>\n<p>2.@Resource默认按byName自动注入。</p>\n<p>但是@Resource有两个属性是比较重要的，分是name和type；</p>\n<p>如果使用name属性，则使用byName的自动注入策略，而使用type属性时则使用byType自动注入策略;</p>\n<p>3.@Autowired是spring自己定义的注解，@Resource是J2EE的，由JSR-250规范定义。</p>\n<p>PS：个人建议用@Resource，不为什么，减少与spring的耦合。</p>\n<p><strong>创建了一个接口对象，就可以用所有实现了该接口函数的类对象去实例化这个对象。</strong></p>\n<p>Test 加上RunWith和@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</p>\n<p>再加上@Test注解，可以在不需要main函数下执行测试类</p>\n<p>创建Springboot项目可以用SpringInitialize 勾选springboot Web 、Jpa、Mysql</p>\n<p>/Users/wuzhenren/Downloads</p>\n<p>~/Users/wuzhenren/Downloads/cmake-3.21.1.tar</p>\n<p>~/Users/wuzhenren/Library/Caches/Homebrew/downloads/cmake-3.21.1.tar</p>\n<p>mac的mysql下载好之后，设置环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/mysql/bin</span><br><span class=\"line\">vim ~/.bash_profile</span><br><span class=\"line\">保存</span><br><span class=\"line\">export PATH=$PATH:/usr/local/mysql/bin</span><br><span class=\"line\">:wq</span><br><span class=\"line\">随时可以跑mysql命令</span><br></pre></td></tr></table></figure>\n\n\n\n<p>接下来要重置密码：</p>\n<p>mysqladmin -u root -p password ____</p>\n<p>Hero 环境出问题，</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo-cli</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解决。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天打算debug一下，用postman模拟请求，调试一个搜索的功能，把沿路的功能怎么实现的看看。</p>\n<p>JPA写个功能</p>\n<p>刚刚写了一个基于JPA的deleteTest，接口的</p>\n<p>添加公钥的ssh命令，就说本地生成一个公钥 然后加到git里面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh #检查本季已存在的ssh秘钥，如果提示No Such file说明是第一次使用git</span><br><span class=\"line\">ssh-keygen -t rsa -C 邮件地址</span><br><span class=\"line\">---连续三次回车最终生成一个文件中用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，并打开复制里面的内容，打开你的GitHub主页，进入个人设置SSH and GPG keys -&gt; New SSH key</span><br><span class=\"line\">将刚复制的内容粘贴到key那里，title随便填，保存。测试是否成功</span><br><span class=\"line\">ssh -T git@github.com # 注意邮箱地址不用改</span><br><span class=\"line\">如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</span><br><span class=\"line\">You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">看到这个信息说明SSH已配置成功！</span><br><span class=\"line\">此时你还需要配置：</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name <span class=\"string\">&quot;liuxianan&quot;</span>// 你的github用户名，非昵称 $ git config --global user.email <span class=\"string\">&quot;xxx@qq.com&quot;</span>// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure>\n\n<p>接口类创建的对象需要autowire注入</p>\n<p>查看Mac是x86还是arm，在终端中输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -an</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/Users/wuzhenren/myblog/source/_posts/7%E6%9C%8830%E6%97%A5.assets/image-20210730124507149.png\" alt=\"image-20210730124507149\"></p>\n<p>spring中注解@Resource 与@Autowire 区别<br>@Resource与@Autowired的区别?<br>1.@Autowired按byType自动注入。</p>\n<p>2.@Resource默认按byName自动注入。</p>\n<p>但是@Resource有两个属性是比较重要的，分是name和type；</p>\n<p>如果使用name属性，则使用byName的自动注入策略，而使用type属性时则使用byType自动注入策略;</p>\n<p>3.@Autowired是spring自己定义的注解，@Resource是J2EE的，由JSR-250规范定义。</p>\n<p>PS：个人建议用@Resource，不为什么，减少与spring的耦合。</p>\n<p><strong>创建了一个接口对象，就可以用所有实现了该接口函数的类对象去实例化这个对象。</strong></p>\n<p>Test 加上RunWith和@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</p>\n<p>再加上@Test注解，可以在不需要main函数下执行测试类</p>\n<p>创建Springboot项目可以用SpringInitialize 勾选springboot Web 、Jpa、Mysql</p>\n<p>/Users/wuzhenren/Downloads</p>\n<p>~/Users/wuzhenren/Downloads/cmake-3.21.1.tar</p>\n<p>~/Users/wuzhenren/Library/Caches/Homebrew/downloads/cmake-3.21.1.tar</p>\n<p>mac的mysql下载好之后，设置环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/mysql/bin</span><br><span class=\"line\">vim ~/.bash_profile</span><br><span class=\"line\">保存</span><br><span class=\"line\">export PATH=$PATH:/usr/local/mysql/bin</span><br><span class=\"line\">:wq</span><br><span class=\"line\">随时可以跑mysql命令</span><br></pre></td></tr></table></figure>\n\n\n\n<p>接下来要重置密码：</p>\n<p>mysqladmin -u root -p password ____</p>\n<p>Hero 环境出问题，</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo-cli</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解决。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}